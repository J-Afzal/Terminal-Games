name: Continuous Integration

run-name: CI - ${{ github.run_number }} - ${{ github.head_ref }}

on:
    pull_request:
        branches:
            - master

jobs:
    build:
        strategy:
            matrix:
                os:
                    # - macos-latest
                    # - ubuntu-latest
                    - windows-latest

        runs-on: ${{ matrix.os }}

        steps:
            - uses: actions/checkout@v4

            - uses: msys2/setup-msys2@v2
              with:
                  update: true
                  install: >-
                      mingw-w64-x86_64-ninja

            - name: Put MSYS2_MinGW64 on PATH
              run: echo "D:/a/_temp/msys64/mingw64/bin" >> $GITHUB_PATH

            - name: Configure CMake
              run: |
                  cmake -S . -B ./build -G "Ninja" -DCMAKE_BUILD_TYPE=Release

            - name: Run clang-tidy
              shell: pwsh
              run: |
                  Import-Module ./scripts/Linters.psm1

                  Test-TerminalGamesCode -Verbose

            - name: Build Project
              run: cmake --build ./build --config Release

    linting:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Install dev dependencies
              run: npm install

            - name: Run cspell
              run: npx cspell .

            - name: Run prettier (for JSON linting)
              if: success() || failure()
              run: npx prettier . --check

            - name: Run PSScriptAnalyzer (for PowerShell linting)
              if: success() || failure()
              shell: pwsh
              run: Invoke-ScriptAnalyzer -Path . -Recurse -Severity Information

            - name: Run gitattributes linter
              if: success() || failure()
              shell: pwsh
              run: |
                  Import-Module ./scripts/Linters.psm1

                  Test-GitAttributesFile -Verbose
