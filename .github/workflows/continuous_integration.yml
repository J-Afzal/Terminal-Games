name: Continuous Integration

run-name: CI - ${{ github.run_number }} - ${{ github.head_ref }}

on:
    pull_request:
        branches:
            - master

jobs:
    build:
        strategy:
            matrix:
                os:
                    - macos-latest
                    - ubuntu-latest
                    - windows-latest

        runs-on: ${{ matrix.os }}

        steps:
            - uses: actions/checkout@v4

            - name: Install gcc-14 on Ubuntu
              if: matrix.configurations.os == "ubuntu-latest"
              run: |
                sudo apt install gcc-14 g++-14
                sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-14 100 --slave /usr/bin/g++ g++ /usr/bin/g++-14 --slave /usr/bin/gcov gcov /usr/bin/gcov-14
                sudo update-alternatives --set gcc /usr/bin/gcc-14

            - name: Configure CMake
              run: cmake -S . -B ./build -D "CMAKE_BUILD_TYPE=Release"

            - name: Build Project
              run: cmake --build ./build --config Release

    linting:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Install dev dependencies
              run: npm install

            - name: Run cspell
              run: npx cspell .

            - name: Run prettier (for JSON linting)
              if: success() || failure()
              run: npx prettier . --check

            - name: Run PSScriptAnalyzer (for PowerShell linting)
              if: success() || failure()
              shell: pwsh
              run: Invoke-ScriptAnalyzer -Path . -Recurse -Severity Information

            - name: Run gitattributes linter
              if: success() || failure()
              shell: pwsh
              run: |
                  Import-Module ./scripts/Linters.psm1

                  Test-GitAttributesFile -Verbose
